
swagger: "2.0"
info:
  version: 1.0.0
  title: taskmanagerClient
  description: taskmanagerClient REST API Application
basePath: /api/v1/taskmanagerClient

tags:

  - name: Participants
    description: Simple participant endpoints

  - name: Tasks
    description: Simple task endpoints


consumes:
  - application/json
produces:
  - application/json

definitions:
  

    participant_ParticipantBody:
      type: object
      title: Participant
      required:
         - id
         - name
         - msp
         - identities
      properties:
        id:
          type: string
          example: a_text
        name:
          type: string
          example: a_text
        msp:
          type: string
          example: a_text
        identities:
          type: array
          items:
            type: x509Identities
          example: [ {
status: a_text,
fingerprint: a_text}, {
status: a_text,
fingerprint: a_text} ]

    task_TaskBody:
      type: object
      title: Task
      required:
         - id
         - title
         - description
         - state
         - created
         - owner
         - assignee
         - prerequisites
         - due
         - attachments
         - deliverables
         - priority
      properties:
        id:
          type: string
          example: a_text
        title:
          type: string
          example: a_text
        description:
          type: string
          example: a_text
        state:
          type: integer
          enum:
              - 0
              - 1
              - 2
              - 3
              - 4
          example: 0
        created:
          type: number
          example: 123
        owner:
          type: string
          example: a_text
        assignee:
          type: string
          example: registeredParticipantId
        prerequisites:
          type: array
          items:
            type: string
          example: [ a_text, a_text ]
        due:
          type: Date
          example: {"020-12-17T02:24:00.000Z"}
        attachments:
          type: array
          items:
            type: string
          example: [ "hash_of_a_file", "efijwife"]
        deliverables:
          type: array
          items:
            type: string
          example: [ a_text, a_text ]
        priority:
          type: integer
          enum:
              - 0
              - 1
              - 2
          example: 0
   

    participant_registerBody:
       type: object
       title: participant_registerParams
       required:
          - id
       properties:
         id:
           type: string
           example: a_text

    participant_changeIdentityBody:
       type: object
       title: participant_changeIdentityParams
       required:
          - id
          - newIdentity
       properties:
         id:
           type: string
           example: a_text
         newIdentity:
           type: string
           example: a_text

    task_createBody:
       type: object
       title: task_createParams
       required:
          - id
          - title
          - description
          - priority
          - due
          - ownerId
          - prereq
          - attachments
       properties:
         id:
           type: string
           example: a_text
         title:
           type: string
           example: a_text
         description:
           type: string
           example: a_text
         priority:
           type: integer
           example: 1
         due:
           type: string
           example: a_text
         ownerId:
           type: string
           example: a_text
         prereq:
           type: array
           items:
            type: string
           example: [a_text, a_text]
         attachments:
           type: array
           items:
            type: string
           example: [a_text, a_text]

    task_modifyBody:
       type: object
       title: task_modifyParams
       required:
          - id
          - title
          - description
          - priority
          - due
          - prereq
          - attachements
       properties:
         id:
           type: string
           example: a_text
         title:
           type: string
           example: a_text
         description:
           type: string
           example: a_text
         priority:
           type: Priority
           example: {}
         due:
           type: string
           example: a_text
         prereq:
           type: array
           items:
            type: string
           example: [a_text, a_text]
         attachements:
           type: array
           items:
            type: string
           example: [a_text, a_text]

    task_assignBody:
       type: object
       title: task_assignParams
       required:
          - taskId
          - assigneeId
       properties:
         taskId:
           type: string
           example: a_text
         assigneeId:
           type: string
           example: a_text

    task_saveDeliverablesBody:
       type: object
       title: task_saveDeliverablesParams
       required:
          - taskId
          - deliverables
       properties:
         taskId:
           type: string
           example: a_text
         deliverables:
           type: array
           items:
            type: string
           example: [a_text, a_text]

    task_passToReviewBody:
       type: object
       title: task_passToReviewParams
       required:
          - taskId
       properties:
         taskId:
           type: string
           example: a_text

    task_approveBody:
       type: object
       title: task_approveParams
       required:
          - taskId
       properties:
         taskId:
           type: string
           example: a_text

    task_revokeBody:
       type: object
       title: task_revokeParams
       required:
          - taskId
       properties:
         taskId:
           type: string
           example: a_text

    task_reworkBody:
       type: object
       title: task_reworkParams
       required:
          - taskId
       properties:
         taskId:
           type: string
           example: a_text

    task_transferOwnershipBody:
       type: object
       title: task_transferOwnershipParams
       required:
          - taskId
          - newOwner
       properties:
         taskId:
           type: string
           example: a_text
         newOwner:
           type: string
           example: a_text

    task_deleteBody:
       type: object
       title: task_deleteParams
       required:
          - taskId
       properties:
         taskId:
           type: string
           example: a_text

paths:



  /participant/participants/{id}:
    get:
      tags:
        - Participants
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the participant to retrieve
          type: string
      responses:
        200:
          description: Return the participant with the specified id
        404:
          description: Participant not found 


  /participant/register:
    post:
      tags:
        - register
      description: register
      parameters:
        - name: participant_registerParams
          in: body
          required: true
          schema:
            $ref: "#/definitions/participant_registerBody"
      responses:
        200:
          description: register executed correctly
        500:
          description: register raised an exception


  /participant/changeIdentity:
    post:
      tags:
        - changeIdentity
      description: changeIdentity
      parameters:
        - name: participant_changeIdentityParams
          in: body
          required: true
          schema:
            $ref: "#/definitions/participant_changeIdentityBody"
      responses:
        200:
          description: changeIdentity executed correctly
        500:
          description: changeIdentity raised an exception



  /task/tasks/assigned/{id}:
    get:
      tags:
        - Tasks
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the participant that has tasks assigned
          type: string
      responses:
        200:
          description: Return the tasks that have participant with provided id as an assignee
        404:
          description: Tasks not found 

  /task/tasks/owned/{id}:
    get:
      tags:
        - Tasks
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the participant that owns the tasks
          type: string
      responses:
        200:
          description: Return the tasks that are owned by provided participant
        404:
          description: Task not found 

  /task/tasks/{id}:
    get:
      tags:
        - Tasks
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the task to retrieve
          type: string
      responses:
        200:
          description: Return the task with the specified id
        404:
          description: Task not found 


  /task/create:
    post:
      tags:
        - create
      description: create
      parameters:
        - name: task_createParams
          in: body
          required: true
          schema:
            $ref: "#/definitions/task_createBody"
      responses:
        200:
          description: create executed correctly
        500:
          description: create raised an exception


  /task/modify:
    post:
      tags:
        - modify
      description: modify
      parameters:
        - name: task_modifyParams
          in: body
          required: true
          schema:
            $ref: "#/definitions/task_modifyBody"
      responses:
        200:
          description: modify executed correctly
        500:
          description: modify raised an exception


  /task/assign:
    post:
      tags:
        - assign
      description: assign
      parameters:
        - name: task_assignParams
          in: body
          required: true
          schema:
            $ref: "#/definitions/task_assignBody"
      responses:
        200:
          description: assign executed correctly
        500:
          description: assign raised an exception


  /task/saveDeliverables:
    post:
      tags:
        - saveDeliverables
      description: saveDeliverables
      parameters:
        - name: task_saveDeliverablesParams
          in: body
          required: true
          schema:
            $ref: "#/definitions/task_saveDeliverablesBody"
      responses:
        200:
          description: saveDeliverables executed correctly
        500:
          description: saveDeliverables raised an exception


  /task/passToReview:
    post:
      tags:
        - passToReview
      description: passToReview
      parameters:
        - name: task_passToReviewParams
          in: body
          required: true
          schema:
            $ref: "#/definitions/task_passToReviewBody"
      responses:
        200:
          description: passToReview executed correctly
        500:
          description: passToReview raised an exception


  /task/approve:
    post:
      tags:
        - approve
      description: approve
      parameters:
        - name: task_approveParams
          in: body
          required: true
          schema:
            $ref: "#/definitions/task_approveBody"
      responses:
        200:
          description: approve executed correctly
        500:
          description: approve raised an exception


  /task/revoke:
    post:
      tags:
        - revoke
      description: revoke
      parameters:
        - name: task_revokeParams
          in: body
          required: true
          schema:
            $ref: "#/definitions/task_revokeBody"
      responses:
        200:
          description: revoke executed correctly
        500:
          description: revoke raised an exception


  /task/rework:
    post:
      tags:
        - rework
      description: rework
      parameters:
        - name: task_reworkParams
          in: body
          required: true
          schema:
            $ref: "#/definitions/task_reworkBody"
      responses:
        200:
          description: rework executed correctly
        500:
          description: rework raised an exception


  /task/transferOwnership:
    post:
      tags:
        - transferOwnership
      description: transferOwnership
      parameters:
        - name: task_transferOwnershipParams
          in: body
          required: true
          schema:
            $ref: "#/definitions/task_transferOwnershipBody"
      responses:
        200:
          description: transferOwnership executed correctly
        500:
          description: transferOwnership raised an exception


  /task/delete:
    post:
      tags:
        - delete
      description: delete
      parameters:
        - name: task_deleteParams
          in: body
          required: true
          schema:
            $ref: "#/definitions/task_deleteBody"
      responses:
        200:
          description: delete executed correctly
        500:
          description: delete raised an exception

